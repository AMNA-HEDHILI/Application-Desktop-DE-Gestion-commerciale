# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'supplier.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymongo
import pandas as pd
import numpy as np
import sys
from PyQt5 import QtWidgets, QtGui, QtCore
from PyQt5.uic import loadUi
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import QMessageBox

# database
client= pymongo.MongoClient()
mydb=client["RetailManagmentSystem"]
Supplier=mydb["Supplier"]

# Creating the dataframe from database 
df = pd.DataFrame(list(Supplier.find()))



class Ui_Form(object):

    def getSelect(self):
            df = pd.DataFrame(list(Supplier.find()))
            indexes = self.table.selectionModel().selectedRows()
            for index in sorted(indexes):
                select = index.row()
                InvoiceSelect = df.loc[select,'Invoice']
                self.Invoice.setText(str(InvoiceSelect))
                NameSelect = df.loc[select,'Name']
                self.Name.setText(str(NameSelect))
                ContactSelect = df.loc[select,'Phone No']
                self.Contact.setText(str(ContactSelect))
                QuantitySelect = df.loc[select,'Quantity']
                self.Quantity.setText(str(QuantitySelect))
                ProductSelect = df.loc[select, 'Product']
                index = self.Product.findText(ProductSelect, QtCore.Qt.MatchFixedString)
                if index >= 0:
                        self.Product.setCurrentIndex(index)  

    def Update(self):
        # get text from fields
        newInvoice = self.Invoice.text()
        newName = self.Name.text()
        newContact = self.Contact.text()
        newProduct = self.Product.currentText()
        newQuantity = self.Quantity.text()
        if( (newInvoice != "") and (newName != "") and (newContact != "") and (newProduct != "") and (newQuantity != "")):
            # go to df looking for _id (pos)
            df = pd.DataFrame(list(Supplier.find()))
            indexes = self.table.selectionModel().selectedRows()
            for index in sorted(indexes):
                select = index.row()
                idSelect = df.loc[select, '_id']
            # update in mongodb
            myquery = { "_id": idSelect }
            newvalues = { "$set":  {"Invoice": int(newInvoice), "Name": newName, "Phone No": int(newContact),"Product": newProduct,"Quantity": int(newQuantity)} }
            Supplier.update_one(myquery, newvalues)
            # update in fataframe
            df = pd.DataFrame(list(Supplier.find()))
            self.table.setColumnCount(len(df.columns))
            self.table.setRowCount(len(df.index))
            for i in range(len(df.index)):
                for j in range(len(df.columns)):
                    self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))
            msg = QMessageBox()
            msg.setWindowTitle("Update Supplier")
            msg.setIcon(QMessageBox.Information)
            msg.setText("Record update successfully")
            retval = msg.exec_()  
        else:
            msg = QMessageBox()
            msg.setWindowTitle("ERROR")
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Please fill the required fields")
            retval = msg.exec_() 

    def search(self):
        # get text
        if ( self.InvoiceInput.text() != ""):
            InvoiceNo=self.InvoiceInput.text()
            # search
            result = mydb.Supplier.find_one({"Invoice" : int(InvoiceNo)})
            if( result == None):
                msg = QMessageBox()
                msg.setWindowTitle("Not Found")
                msg.setIcon(QMessageBox.Critical)
                msg.setText("No Result Found")
                retval = msg.exec_()  
            else:
                df = pd.DataFrame(list(Supplier.find({"Invoice" : int(InvoiceNo)})))
                self.table.setSelectionBehavior(QtWidgets.QTableView.SelectRows)
                self.table.setColumnCount(len(df.columns))
                self.table.setRowCount(len(df.index))
                for i in range(len(df.index)):
                    for j in range(len(df.columns)):
                        self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))
                #â”‚listesupp = list(mydb.Supplier.find({"Invoice":(InvoiceNo)}))
                self.Invoice.setText(str (result["Invoice"]))
                self.Name.setText(str(result["Name"]))
                self.Contact.setText(str(result["Phone No"]))
                self.Product.setCurrentText(str(result["Product"]))
                self.Quantity.setText(str(result["Quantity"]))  
                
    
    def Add(self):
        # get informations
        Invoice=self.Invoice.text()
        Name=self.Name.text()
        Contact=self.Contact.text()
        Product=self.Product.currentText()
        Quantity=self.Quantity.text()
        if( (Invoice != "") and (Name != "") and (Contact != "") and (Product != "") and (Quantity != "")):
            # insert
            data = {"Invoice": int(Invoice), "Name": Name, "Phone No": int(Contact),"Product": Product,"Quantity": int(Quantity)}
            mycol = Supplier.insert_one(data)
            # copy result to table 
            df = pd.DataFrame(list(Supplier.find()))
            self.table.setColumnCount(len(df.columns))
            self.table.setRowCount(len(df.index))
            for i in range(len(df.index)):
                for j in range(len(df.columns)):
                    self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))  
            
            msg = QMessageBox()
            msg.setWindowTitle("Add Supplier")
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Record Add Successfully")
            retval = msg.exec_()  
                
        else:
                msg = QMessageBox()
                msg.setWindowTitle("Erroe")
                msg.setIcon(QMessageBox.Warning)
                msg.setText("Please fill the required fields")
                retval = msg.exec_()


        
    def Clear(self):
        self.InvoiceInput.clear()
        self.Invoice.clear()
        self.Name.clear()
        self.Contact.clear()
        self.Product.setCurrentIndex(-1)
        self.Quantity.clear()
        df = pd.DataFrame(list(Supplier.find()))
        self.table.setColumnCount(len(df.columns))
        self.table.setRowCount(len(df.index))
        for i in range(len(df.index)):
                for j in range(len(df.columns)):
                        self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))


    def Delete(self):
        # get informations
        Invoice=self.Invoice.text()
        Name=self.Name.text()
        Contact=self.Contact.text()
        Product=self.Product.currentText()
        Quantity=self.Quantity.text()
        if( (Invoice != "") and (Name != "") and (Contact != "") and (Product != "") and (Quantity != "")):
            # delete
            Supplier.delete_one({"Invoice": int(Invoice), "Name": Name, "Phone No": int(Contact),"Product": Product,"Quantity": int(Quantity)})
            msg = QMessageBox()
            msg.setWindowTitle("Delete Supplier")
            msg.setIcon(QMessageBox.Information)
            msg.setText("Record delete successfully")
            retval = msg.exec_()    

            # update
            df = pd.DataFrame(list(Supplier.find()))
            self.table.setColumnCount(len(df.columns))
            self.table.setRowCount(len(df.index))
            for i in range(len(df.index)):
                for j in range(len(df.columns)):
                    self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))  

        else:
                msg = QMessageBox()
                msg.setWindowTitle("Erroe")
                msg.setIcon(QMessageBox.Warning)
                msg.setText("Please fill the required fields")
                retval = msg.exec_()


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1385, 720)
        Form.setStyleSheet("background-color: rgb(34, 76, 132);")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(450, 20, 451, 31))
        self.label.setStyleSheet("font: 24pt \"Algerian\";\n"
"color: rgb(255, 255, 0);\n"
"")
        self.label.setObjectName("label")
        self.CustomerNameInput = QtWidgets.QGroupBox(Form)
        self.CustomerNameInput.setGeometry(QtCore.QRect(409, 69, 481, 81))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.CustomerNameInput.sizePolicy().hasHeightForWidth())
        self.CustomerNameInput.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.CustomerNameInput.setFont(font)
        self.CustomerNameInput.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 11pt \"Comic Sans MS\";")
        self.CustomerNameInput.setFlat(False)
        self.CustomerNameInput.setCheckable(False)
        self.CustomerNameInput.setObjectName("CustomerNameInput")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.CustomerNameInput)
        self.horizontalLayout_2.setSpacing(15)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.BillNoLabel = QtWidgets.QLabel(self.CustomerNameInput)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(12)
        self.BillNoLabel.setFont(font)
        self.BillNoLabel.setStyleSheet("#BillNoLabel{    \n"
"    color: rgb(255, 255, 255);\n"
"    font: 100 12pt \"Times New Roman\";\n"
"}")
        self.BillNoLabel.setObjectName("BillNoLabel")
        self.horizontalLayout_2.addWidget(self.BillNoLabel)
        self.InvoiceInput = QtWidgets.QLineEdit(self.CustomerNameInput)
        self.InvoiceInput.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"font: 10pt \"MS Reference Sans Serif\";")
        self.InvoiceInput.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.InvoiceInput.setObjectName("InvoiceInput")
        self.horizontalLayout_2.addWidget(self.InvoiceInput)
        self.Search = QtWidgets.QPushButton(self.CustomerNameInput)
        self.Search.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"font: 75 8pt \"Arial\";")
        self.Search.setObjectName("Search")
        self.horizontalLayout_2.addWidget(self.Search)
        self.BillOptions = QtWidgets.QGroupBox(Form)
        self.BillOptions.setGeometry(QtCore.QRect(180, 580, 1021, 114))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.BillOptions.sizePolicy().hasHeightForWidth())
        self.BillOptions.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.BillOptions.setFont(font)
        self.BillOptions.setStyleSheet("#BillOptions{\n"
"    color: rgb(255, 255, 255);\n"
"    border: none;\n"
"}")
        self.BillOptions.setTitle("")
        self.BillOptions.setObjectName("BillOptions")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.BillOptions)
        self.horizontalLayout_4.setContentsMargins(20, 20, 20, 20)
        self.horizontalLayout_4.setSpacing(20)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.addButton = QtWidgets.QPushButton(self.BillOptions)
        self.addButton.setMinimumSize(QtCore.QSize(0, 40))
        self.addButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.addButton.setFont(font)
        self.addButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.addButton.setFlat(False)
        self.addButton.setObjectName("addButton")
        self.horizontalLayout_4.addWidget(self.addButton)
        self.updateButton = QtWidgets.QPushButton(self.BillOptions)
        self.updateButton.setMinimumSize(QtCore.QSize(0, 40))
        self.updateButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.updateButton.setFont(font)
        self.updateButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.updateButton.setObjectName("updateButton")
        self.horizontalLayout_4.addWidget(self.updateButton)
        self.deleteButton = QtWidgets.QPushButton(self.BillOptions)
        self.deleteButton.setMinimumSize(QtCore.QSize(0, 40))
        self.deleteButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.deleteButton.setFont(font)
        self.deleteButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.deleteButton.setObjectName("deleteButton")
        self.horizontalLayout_4.addWidget(self.deleteButton)
        self.clearButton = QtWidgets.QPushButton(self.BillOptions)
        self.clearButton.setMinimumSize(QtCore.QSize(0, 40))
        self.clearButton.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.clearButton.setFont(font)
        self.clearButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.clearButton.setObjectName("clearButton")
        self.horizontalLayout_4.addWidget(self.clearButton)
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(110, 160, 481, 351))
        self.frame.setStyleSheet("")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setLineWidth(2)
        self.frame.setMidLineWidth(2)
        self.frame.setObjectName("frame")
        self.Product = QtWidgets.QComboBox(self.frame)
        self.Product.setGeometry(QtCore.QRect(150, 230, 288, 31))
        self.Product.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Product.setObjectName("Product")
        self.Product.addItem("")
        self.Product.addItem("")
        self.Product.addItem("")
        self.Product.addItem("")
        self.QuantityLabel = QtWidgets.QLabel(self.frame)
        self.QuantityLabel.setGeometry(QtCore.QRect(20, 240, 121, 18))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(12)
        self.QuantityLabel.setFont(font)
        self.QuantityLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 100 12pt \"Times New Roman\";")
        self.QuantityLabel.setObjectName("QuantityLabel")
        self.ProductLabel = QtWidgets.QLabel(self.frame)
        self.ProductLabel.setGeometry(QtCore.QRect(20, 170, 101, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(12)
        self.ProductLabel.setFont(font)
        self.ProductLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 100 12pt \"Times New Roman\";")
        self.ProductLabel.setObjectName("ProductLabel")
        self.QuantityLabel_2 = QtWidgets.QLabel(self.frame)
        self.QuantityLabel_2.setGeometry(QtCore.QRect(20, 300, 91, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(12)
        self.QuantityLabel_2.setFont(font)
        self.QuantityLabel_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 100 12pt \"Times New Roman\";")
        self.QuantityLabel_2.setObjectName("QuantityLabel_2")
        self.Quantity = QtWidgets.QLineEdit(self.frame)
        self.Quantity.setGeometry(QtCore.QRect(150, 294, 288, 31))
        self.Quantity.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 3px solid;\n"
"border-color: rgb(232, 232, 232);\n"
"font: 10pt \"MS Reference Sans Serif\";\n"
"")
        self.Quantity.setFrame(True)
        self.Quantity.setObjectName("Quantity")
        self.BillNoLabel_3 = QtWidgets.QLabel(self.frame)
        self.BillNoLabel_3.setGeometry(QtCore.QRect(20, 40, 91, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.BillNoLabel_3.setFont(font)
        self.BillNoLabel_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 75 12pt \"Times New Roman\";")
        self.BillNoLabel_3.setObjectName("BillNoLabel_3")
        self.Name = QtWidgets.QLineEdit(self.frame)
        self.Name.setGeometry(QtCore.QRect(150, 104, 288, 31))
        self.Name.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 3px solid;\n"
"border-color: rgb(232, 232, 232);\n"
"")
        self.Name.setObjectName("Name")
        self.Invoice = QtWidgets.QLineEdit(self.frame)
        self.Invoice.setGeometry(QtCore.QRect(150, 40, 288, 25))
        self.Invoice.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 3px solid;\n"
"border-color: rgb(232, 232, 232);\n"
"")
        self.Invoice.setObjectName("Invoice")
        self.Contact = QtWidgets.QLineEdit(self.frame)
        self.Contact.setGeometry(QtCore.QRect(150, 160, 288, 31))
        self.Contact.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 3px solid;\n"
"border-color: rgb(232, 232, 232);")
        self.Contact.setObjectName("Contact")
        self.SubCategoryLabel = QtWidgets.QLabel(self.frame)
        self.SubCategoryLabel.setGeometry(QtCore.QRect(20, 110, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(12)
        self.SubCategoryLabel.setFont(font)
        self.SubCategoryLabel.setStyleSheet("font: 100 12pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.SubCategoryLabel.setObjectName("SubCategoryLabel")
        self.table = QtWidgets.QTableWidget(Form)
        self.table.setGeometry(QtCore.QRect(640, 160, 631, 351))
        self.table.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"\n"
"")
        self.table.setFrameShape(QtWidgets.QFrame.Box)
        self.table.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.table.setLineWidth(3)
        self.table.setMidLineWidth(0)
        self.table.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.table.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.table.setAutoScroll(True)
        self.table.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.table.setRowCount(0)
        self.table.setObjectName("table")
        self.table.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, item)
        self.table.horizontalHeader().setCascadingSectionResizes(False)
        # Display data from mongo to Ui
        df = pd.DataFrame(list(Supplier.find()))
        self.table.setSelectionBehavior(QtWidgets.QTableView.SelectRows)
        self.table.setColumnCount(len(df.columns))
        self.table.setRowCount(len(df.index))
        for i in range(len(df.index)):
                for j in range(len(df.columns)):
                        self.table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))

        # validators
        self.InvoiceInput.setValidator(QIntValidator())
        self.Invoice.setValidator(QIntValidator())
        self.Contact.setValidator(QIntValidator())
        self.Quantity.setValidator(QIntValidator())

        self.retranslateUi(Form)
        self.Product.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "SUPPLIER MANAGMENT"))
        self.CustomerNameInput.setTitle(_translate("Form", "Search supplier"))
        self.BillNoLabel.setText(_translate("Form", "Invoice No."))
        self.Search.setText(_translate("Form", "Search"))
        self.addButton.setText(_translate("Form", "ADD"))
        self.updateButton.setText(_translate("Form", "UPDATE"))
        self.deleteButton.setText(_translate("Form", "DELETE"))
        self.clearButton.setText(_translate("Form", "CLEAR"))
        self.Product.setItemText(0, _translate("Form", "prod_K"))
        self.Product.setItemText(1, _translate("Form", "prod_T"))
        self.Product.setItemText(2, _translate("Form", "prod_J"))
        self.Product.setItemText(3, _translate("Form", "prod_O"))
        self.QuantityLabel.setText(_translate("Form", "Select Product"))
        self.ProductLabel.setText(_translate("Form", "Contact No."))
        self.QuantityLabel_2.setText(_translate("Form", "Quantity"))
        self.BillNoLabel_3.setText(_translate("Form", "Invoice No."))
        self.SubCategoryLabel.setText(_translate("Form", "Supplier Name"))
        self.table.setSortingEnabled(False)
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Id"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Invoice"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Name"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Phone No"))
        item = self.table.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Product"))
        item = self.table.horizontalHeaderItem(5)
        item.setText(_translate("Form", "Quantity"))

        # Connect buttons 
        self.Search.clicked.connect(self.search)
        self.addButton.clicked.connect(self.Add)
        self.updateButton.clicked.connect(self.Update)
        self.deleteButton.clicked.connect(self.Delete)
        self.clearButton.clicked.connect(self.Clear)
        self.table.selectionModel().selectionChanged.connect(self.getSelect)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
